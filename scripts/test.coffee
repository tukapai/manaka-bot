# Description:
#   manaka do something
#
# Dependencies:
#   None
#
# Configuration:
#   None
#
# Commands:
#   huga - output huga
#   hubot search <keyword> - send get and post request to `example.com`
#
# Notes:
#   this is an example code for hubot-script.
#
# Author: tukapai
#


module.exports = (robot) ->

  robot.hear /„Åä„ÅØ„Çà„ÅÜ/i, (res) ->
    res.send "„Åä„ÅØ„Çà„ÅÜüòä"

  robot.hear /‰ªäÊó•„ÇÇ„ÅÑ„ÅÑÂ§©Ê∞ó„Å†„Å≠/i, (res) ->
    res.send "„Åù„ÅÜ„Å†„Å≠„ÄÅ‰ªäÊó•„ÇÇ‰∏ÄÊó•È†ëÂºµ„Çç„ÅÜüòÑ"

  robot.hear /‰ªäÊó•„ÅÆÈÅãÂã¢„ÅØÔºü/i, (res) ->
    luck = ['Â§ßÂêâ', '‰∏≠Âêâ', 'Â∞èÂêâ']
    res.send "‰ªäÊó•„ÅÆÈÅãÂã¢„ÅØ"„ÄÄres.random luck„ÄÄ"„Å†„ÇàÔºÅ"

  robot.respond /(.*) ++/i, (res) ->
    user_name = res.match[1]
    happy = ['„Åô„Å∞„Çâ„Åó„ÅÑÔºÅ', '„Åô„Åî„ÅÑ', '„ÅÑ„ÅÑ„Å≠']
      res.reply res.random happy

  robot.respond /(.*) --/i, (res) ->
    user_name = res.match[1]
    chearup = ['È†ëÂºµ„Å£„Å¶ÔºÅ', 'Ë≤†„Åë„Å™„ÅÑ„ÅßÔºÅ', '„Åæ„Å†Êà¶„Åà„Çã„ÇàÔºÅ']
      res.reply res.random chearup

  TODO:„É©„É≥„ÉÄ„É†Ê†ºË®Ä„Åô„ÇãBot„ÇíÊé¢„Åô

  robot.hear /„É©„É≥„ÉÄ„É†Ê†ºË®Ä/i, (res) ->
       request.get({
         url: 'http://www.meigensyu.com/quotations/view/random',
         headers: {
           'User-Agent': 'Hubot'
         }
    res.send "„ÅÑ„ÅæÊ∫ñÂÇô‰∏≠ÔºÅ"

# ÁÖΩ„Çä„Åü„ÅÑÊôÇ„Å´‰Ωø„ÅÜ„ÇÑ„Å§
popteamepic = [
 "https://i.imgur.com/8pIayDj.gifv",
 "https://i.imgur.com/ZGRtDpR.png",
 "https://i.imgur.com/CP6PxrV.jpg"
]
  robot.hear /„Éù„ÉóÂ≠ê/i, (msg) ->
    msg.send msg.random popteamepic

 #„ÄÄ„ÅÑ„ÅÑ„Å≠„Å£„Å¶„Åó„Åü„ÇâÔºã1„Ç´„Ç¶„É≥„Éà„Åô„Çã„ÇÑ„Å§
  robot.hear /^(.+)\+\+$/i, (msg) ->
    user = msg.match[1]

    if not robot.brain.data[user]
      robot.brain.data[user] = 0

    robot.brain.data[user]++
    robot.brain.save()

    msg.send robot.brain.data[user]

  # genarate asciime
  robot.respond /ascii( me)? (.+)/i, (msg) ->
    msg
      .http("http://asciime.herokuapp.com/generate_ascii")
      .query(s: msg.match[2].split(' ').join('  '))
      .get() (err, res, body) ->
        msg.send body
#http://www.meigensyu.com/quotations/view/random
 # ‰ªäÊó•‰ΩïÊõúÊó•„Å†„Å£„Åë„Å´Á≠î„Åà„Å¶„Åè„Çå„Çã„ÇÑ„Å§
   robot.respond„ÄÄ/‰ªäÊó•„ÅØ‰ΩïÊõúÊó•Ôºü/i => {

    request.get({
      url: 'http://api.sekido.info/qreki?output=json',
      headers: {
        'User-Agent': 'Hubot'
      }
    }, (err, res, body) => {
        let parsedBody = JSON.parse(body);
        console.log(parsedBody.rokuyou_text);
        msg.send(`‰ªäÊó•„ÅØ${JSON.parse(body).rokuyou_text}„Åß„Åô`);
    });
  });


  # respond„Åô„Çã„Å® hubot search `something` „ÅÆ„Çà„ÅÜ„Å´hubot„Å´ÂëΩ‰ª§„Åß„Åç„Çã
  # http (get, post) „ÇÇ„Åß„Åç„Åü„Çä„Åô„Çã„ÅÆ„ÅßÁµÑ„ÅøÂêà„Çè„Åõ„Çã„Å®Èù¢ÁôΩ„ÅÑ„Åã„ÇÇ
  robot.respond /search (.*)/i, (msg) ->
    searchText = msg.match[1]
    data =
      hoge: 'hoge'
      fuga: 'fuga'
    robot.http('http://example.com')
      .get() (err, res, body) ->
        if err
          msg.send "sorry, #{msg.message.user.name}. I cannot understand..."
        # Ëøî„Å£„Å¶„Åç„ÅüÂÄ§„Çí‰Ωø„Å£„Å¶‰Ωï„Åã„Åô„Çã
        msg.send "#{res.data}"
      .post(data) (err, res, body) ->

  # key score sample
  KEY_SCORE = 'key_score'

  getScores = () ->
    return robot.brain.get(KEY_SCORE) or {}

  changeScore = (name, diff) ->
    source = getScores()
    score = source[name] or 0
    new_score = score + diff
    source[name] = new_score

    robot.brain.set KEY_SCORE, source
    return new_score

  robot.respond /list/i, (msg) ->
    source = getScores()
    console.log source
    for name, score of source
      msg.send "#{name}: #{score}"

  robot.hear /^(.+)\+\+$/i, (msg) ->
    name = msg.match[1]
    new_score = changeScore(name, 1)
    msg.send "#{name}: #{new_score}"

  robot.hear /^(.+)--$/i, (msg) ->
    name = msg.match[1]
    new_score = changeScore(name, -1)
    msg.send "#{name}: #{new_score}"

  #‰ªäÊó•„ÅÆÂ§©Ê∞ó„ÅØÊ©üËÉΩ
  #‰ªäÊó•„ÅÆÂ§©Ê∞ó„ÅØÔºü„Å®ËÅû„Åè„Å®Êù±‰∫¨„ÅÆÂ§©Ê∞ó„ÇíËøî„Åó„Å¶„Åè„Çå„Çã„ÇÑ„Å§„Çí‰Ωú„Çã(API„ÅÆ„Çµ„É≥„Éó„É´)
  #api = "http://api.openweathermap.org/data/2.5/weather?q={city}&APPID={key}"
  robot.respond /list/i, (msg) ->
     robot.http("http://api.openweathermap.org/data/2.5/weather?q={city}&APPID={key}")

   msg.send "‰ªäÊó•„ÅÆÂ§©Ê∞ó„ÅØ##{Â§©Ê∞ó„Éá„Éº„Çø}„Å†„Çà"

   // Description:
//   This script uses custom Telegram functionality to deliver a photo
//   to a user using the Telegram sendPhoto call

var fs = require('fs');

robot.respond /ÁßÅ„ÅÆÂêçÂâç„ÅØÔºü/i, (msg) ->
  msg.send "„ÅÇ„Å™„Åü„ÅØ#{msg.message.user.name}„Å†„Çà„Å≠"
  
  
# teregram
# module.exports = function (robot) {
#
#   robot.hear(/send photo/i, function (res) {
#
#     robot.emit('telegram:invoke', 'sendPhoto', {
#       chat_id: res.message.room,
#       photo: fs.createReadStream(__dirname + '/image.png')
#     }, function (error, response) {
#       console.log(error);
#       console.log(response);
#     });
#   });
# };
